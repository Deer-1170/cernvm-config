#!/bin/sh
set -e

NAME=
DISK_SIZE=
MEM_SIZE=
USER_DATA=
ROOT_KEY=
CONTEXT_HDD=
EXTRA_HDD=
IMAGE=
ONE_NIC=n

create_context_image() {
  if [ "x${USER_DATA}${ROOT_KEY}" != "x" ]; then
    mkdosfs -C ${TEMP_DIR}/context.fat 992
    mkdir ${TEMP_DIR}/context
    
    if [ "x${ROOT_KEY}" != "x" ]; then
      cp "$ROOT_KEY" ${TEMP_DIR}/context/root.pub
      mcopy -i ${TEMP_DIR}/context.fat "$ROOT_KEY"::/root.pub
      echo "ROOT_PUBKEY=root.pub" >> ${TEMP_DIR}/context/context.sh
    fi
    
    if [ "x${USER_DATA}" != "x" ]; then
      user_data_base64=$(base64 --wrap=0 "${USER_DATA}")
      echo "EC2_USER_DATA=\"$user_data_base64\"" >> ${TEMP_DIR}/context/context.sh
    fi
    
    echo "ONE_CONTEXT_PATH=\"/var/lib/amiconfig\"" >> ${TEMP_DIR}/context/context.sh
    touch ${TEMP_DIR}/context/prolog.sh
    mcopy -i ${TEMP_DIR}/context.fat ${TEMP_DIR}/context/prolog.sh ::/prolog.sh
    mcopy -i ${TEMP_DIR}/context.fat ${TEMP_DIR}/context/context.sh ::/context.sh
    
    mkisofs -o "${NAME}.context.iso" ${TEMP_DIR}/context
    
    dd if=/dev/zero of=${TEMP_DIR}/context.hdd bs=1024 count=1024
    echo "0,," | sfdisk -uM -C32 -H1 -S63 ${TEMP_DIR}/context.hdd
    dd if=${TEMP_DIR}/context.fat of=${TEMP_DIR}/context.hdd bs=512 seek=1
    rm -f ${TEMP_DIR}/context.fat
    CONTEXT_HDD=${TEMP_DIR}/context.hdd
  fi
}

while getopts n:d:m:i:u:k:e:oh opt; do
  case $opt in
    n)
      NAME="$OPTARG"
    ;;
    d)
      DISK_SIZE="$OPTARG"
    ;;
    m)
      MEM_SIZE="$OPTARG"
    ;;
    i)
      IMAGE="$OPTARG"
    ;;
    u)
      USER_DATA="$OPTARG"
    ;;
    k)
      ROOT_KEY="$OPTARG"
    ;;        
    x)
      X509_CERT="$OPTARG"
    ;;
    e)
      EXTRA_HDD="$OPTARG"
    ;;
    o)
      ONE_NIC=y
    ;;
    \?|h)
      echo "Usage: $0 -n <NAME> -d <SIZE MB> -m <SIZE MB> -i <IMAGE FILE> [-u <USER DATA>] [-k <ROOT SSH KEY>] [-e <EXTRA IMAGE>] [-o(ne network card, no host-only)]"
      echo "Example: $0 -n MyVM -d 20000 -m 1024 -i ucernvm-devel.1.17-11.cernvm.x86_64.hdd -u user-data.txt -k mykey.pub -e extra.hdd"
      exit 0
    ;;  
  esac
done

TEMP_DIR=$(mktemp -d)

create_context_image

VBoxManage convertfromraw "$IMAGE" ${TEMP_DIR}/boot.vmdk --format VMDK --variant Stream
VBoxManage createhd --filename ${TEMP_DIR}/scratch.vmdk --size "$DISK_SIZE" --format VMDK --variant Stream
if [ "x$CONTEXT_HDD" != "x" ]; then
  VBoxManage convertfromraw "$CONTEXT_HDD" ${TEMP_DIR}/context.vmdk --format VMDK --variant Stream
  CONTEXT_HDD=${TEMP_DIR}/context.vmdk
fi
if [ "x$EXTRA_HDD" != "x" ]; then
  VBoxManage convertfromraw "$EXTRA_HDD" ${TEMP_DIR}/extra.vmdk --format VMDK --variant Stream
  EXTRA_HDD=${TEMP_DIR}/extra.vmdk
fi
VBoxManage createvm --name "$NAME" --ostype Linux26_64 --register
VBoxManage storagectl "$NAME" --name SATA --add sata --portcount 4 --hostiocache on --bootable on
HOSTONLY_NIC=
if [ x"$ONE_NIC" != "xy" ]; then
  HOSTONLY_NIC="--nic2 hostonly --natdnshostresolver2 on"
fi
VBoxManage modifyvm "$NAME" --memory "$MEM_SIZE" --vram 20 --nic1 nat --natdnshostresolver1 on $HOSTONLY_NIC --clipboard bidirectional --draganddrop hosttoguest
while pgrep VBoxSVC > /dev/null; do true; done
VBoxManage storageattach "$NAME" --storagectl SATA --port 0 --type hdd --medium ${TEMP_DIR}/boot.vmdk
VBoxManage storageattach "$NAME" --storagectl SATA --port 1 --type hdd --medium ${TEMP_DIR}/scratch.vmdk
if [ "x$CONTEXT_HDD" != "x" ]; then  
  VBoxManage storageattach "$NAME" --storagectl SATA --port 2 --type hdd --medium "$CONTEXT_HDD"
fi
if [ "x$EXTRA_HDD" != "x" ]; then
  VBoxManage storageattach "$NAME" --storagectl SATA --port 3 --type hdd --medium "$EXTRA_HDD"
fi
VBoxManage export "$NAME" -o "${TEMP_DIR}/${NAME}.ova" --vsys 0 --iso --product "CernVM" --producturl "http://cernvm.cern.ch"

rm -rf "${HOME}/VirtualBox VMs/${NAME}"
rm -f ${TEMP_DIR}/*.vmdk ${TEMP_DIR}/*.vdi  ${TEMP_DIR}/*.iso

pushd ${TEMP_DIR}
tar xf "${NAME}.ova"
cat "${NAME}.ovf" | \
  sed -e 's/MACAddress="[0-9A-Z]*"//' | sed -e 's/HostOnlyInterface name=""/HostOnlyInterface name="vboxnet0"/' > "${NAME}.ovf~"
mv "${NAME}.ovf~" "${NAME}.ovf"
rm -f "${NAME}.ova"
tar cf "${NAME}.ova" "${NAME}.ovf" *.vmdk
popd
mv "${TEMP_DIR}/${NAME}.ova" .
rm -rf "${TEMP_DIR}"
